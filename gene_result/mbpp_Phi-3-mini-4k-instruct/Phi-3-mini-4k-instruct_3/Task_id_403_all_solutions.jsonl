{"trace": {"0": {"user_requirement": "Write a function to verifying if a url is valid or not uses regex", "ost_step": {}, "direct_answer": {"text": "def is_valid_URL(str):\n    '''\n    Write a function to verifying if a url is valid or not uses regex\n    for example:\n    is_valid_URL(\"https://www.google.com\") == True\n    '''\n    import re\n    pattern = re.compile(\n        r'^(?:http|ftp)s?://' # http:// or https:// or ftp:// or ftps://\n        r'(?:(?:[A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?\\.)+(?:[A-Z]{2,6}\\.?|[A-Z0-9-]{2,}\\.?)|' # domain...\n        r'localhost|' # localhost...\n        r'\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})' # ...or ip\n        r'(?::\\d+)?' # optional port\n        r'(?:/?|[/?]\\S+)$', re.IGNORECASE)\n    return re.match(pattern, str) is not None", "value": 0.03125}}}, "rollout_id": 0, "type": "DIRECT_ANSWER"}
{"trace": {"0": {"user_requirement": "Write a Python function to validate a URL using regular expressions.", "ost_step": {}, "direct_answer": {"text": "import re\n\ndef is_valid_URL(url):\n    '''\n    Write a Python function to validate a URL using regular expressions.\n    for example:\n    is_valid_URL(\"https://www.google.com\") == True\n    '''\n    # Regular expression pattern for URL validation\n    pattern = re.compile(\n        r'^(?:http|ftp)s?://' # http:// or https://\n        r'(?:(?:[A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?\\.)+(?:[A-Z]{2,6}\\.?|[A-Z0-9-]{2,}\\.?)|' # domain...\n        r'localhost|' # localhost...\n        r'\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|' # ...or ipv4\n        r'\\[?[A-F0-9]*:[A-F0-9:]+\\]?)' # ...or ipv6\n        r'(?::\\d+)?' # optional port\n        r'(?:/?|[/?]\\S+)$', re.IGNORECASE)\n\n    return re.match(pattern, url) is not None", "value": 0.03125}}}, "rollout_id": 0, "type": "DIRECT_ANSWER"}
